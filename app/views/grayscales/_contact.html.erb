<section id="references" class="container content-section text-center">
    <div class="row">
        <div class="col-lg-8 ">



<h3> References X Work </h3>
<svg id="bubble" > </svg>
</div>
<div class="col-lg-4">
<h4>What am I looking at? </h4>
<p>This bubble chart shows the number of times an entity is referenced in each work.   References within the same work are grouped by corresponding colors. The size of each bubble corresponds to the number a given entity has been referenced.  Larger bubbles indicate a higher frequency of reference within a work.</p>

</div>








        </div>

</section>

<script>
var current = window.location;
console.log(jQuery.type(current));

var diameter = 600,
format = d3.format(",d"),
color = d3.scaleOrdinal(d3.schemeCategory20b);

var bubble = d3.pack()
.size([diameter, diameter])
.padding(1.5);

var container_bubble = d3.select("#bubble")
.attr("width", 800)
.attr("height", 800)
.attr("class", "bubble");

d3.json("/flare", function(error, data) {
if (error) throw error;

var root = d3.hierarchy(classes(data))
.sum(function(d) { return d.value; })
.sort(function(a, b) { return b.value - a.value; });

bubble(root);
var node = container_bubble.selectAll(".node")
.data(root.children)
.enter().append("g")
.attr("class", "node")
.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

node.append("title")
.text(function(d){return d.data.className + ": " + format(d.value);});


node.append("circle")
.attr("r", function(d) { return d.r; })
.style("fill", function(d) {
return color(d.data.packageName);
});




node.append("text")
.attr("dy", ".3em")
.style("text-anchor", "middle")
.text(function(d) { return d.data.className.substring(0, d.r / 3); })


node.each(function(){
node.on("click", function(){
var single = d3.select(this);
var text = single.text();
var name = text.split(":",1);
var data = name[0]
console.log(name[0]);


$.ajax( {
url: '/nav',
type: 'POST',
data: {data: data},
dataType: 'text',
success: function(data) {
var loc = data.slice(1)
window.location = current + loc
},
error: function() {
console.log("Ajax error!")
}
});



});
});






});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
var classes = [];

function recurse(name, node) {
if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
else classes.push({packageName: name, className: node.name, value: node.size});
}

recurse(null, root);
return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");



</script>
