<section id="references" class="container content-section text-center">
    <div class="row">
        <div class="col-lg-8 ">



<h3> Total References X Frequency </h3>
<svg id="bubble" > </svg>
</div>
<div class="col-lg-4">
<h4>What am I looking at? </h4>
<p>This bubble chart shows the relative frequency of references within the database.  Each color comprises a different work and all references containes within. The size of each bubble corresponds to the rate within a given work that each topic is referenced.  Larger bubbles indicate a higher frequency of reference.  </p>

</div>








        </div>

</section>

<script>

var diameter = 600,
format = d3.format(",d"),
color = d3.scaleOrdinal(d3.schemeCategory20b);

var bubble = d3.pack()
.size([diameter, diameter])
.padding(1.5);

var container_bubble = d3.select("#bubble")
.attr("width", 800)
.attr("height", 800)
.attr("class", "bubble");

d3.json("/flare", function(error, data) {
if (error) throw error;

var root = d3.hierarchy(classes(data))
.sum(function(d) { return d.value; })
.sort(function(a, b) { return b.value - a.value; });

bubble(root);
var node = container_bubble.selectAll(".node")
.data(root.children)
.enter().append("g")
.attr("class", "node")
.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

node.append("title")
.text(function(d) { return d.data.className + ": " + format(d.value); });

node.append("circle")
.attr("r", function(d) { return d.r; })
.style("fill", function(d) {
return color(d.data.packageName);
});

node.append("text")
.attr("dy", ".3em")
.style("text-anchor", "middle")
.text(function(d) { return d.data.className.substring(0, d.r / 3); });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
var classes = [];

function recurse(name, node) {
if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
else classes.push({packageName: name, className: node.name, value: node.size});
}

recurse(null, root);
return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");



</script>
